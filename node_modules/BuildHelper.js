/*
 * Helpers
 */
console.time( 'Execution time' );

var fs = require( 'fs' );

//var jsBuffer = null;
//var cssBuffer = null;
var buffer = null;
var fileBuffers = [];
var numFilesToRead = 0;

/* Actions */

function concatenate( sourceFiles ) {
	console.info( 'Bundling...' );
	var callback = mush;
	for( var i in sourceFiles ) {
		numFilesToRead ++;
		( function( idx ) {
			fs.readFile( sourceFiles[i], function( err, data ) { fileReady( err, data, idx, callback )});
		})( i );
	}
}

function minify() {
	console.info( 'Obfuscating...' );
	taskDone();
}

function compress() {
	console.info( 'Compressing...' );
	taskDone();
}

function write( outFile ) {
	console.info( 'Writing file...' );
	fs.writeFile( outFile, buffer, function() {
		console.info( 'Wrote', buffer.length, 'bytes to', outFile );
		taskDone();
	});
}


/* Task Management */
var taskQueue = [];
function queueTask( action, args ) {
	taskQueue.push({
		action: action,
	    args: args
	});
}

function taskDone() {
	nextTask();
}

function nextTask() {
	if( taskQueue.length === 0 ) {
		console.info( 'Done!' );
	}
	else {
		var task = taskQueue.shift();
		task.action( task.args );
	}
}

// wait for blocking code to execute, then process queue
setTimeout(
		function() {
			nextTask();
		}, 0 );

/* Async Handlers */
function fileReady( err, data, idx, callback ) {
	if( !err ) {
		//console.log( 'index', idx );
		fileBuffers[ idx ] = data;

		if( --numFilesToRead === 0 ) {
			callback();
			taskDone();
		}
		//console.log( numFilesToRead );
	}
	else {
		console.error( err );
	}
}

function mush() {
	buffer = Buffer.concat( fileBuffers );
	console.info( fileBuffers.length + ' files concatenated.' );
}

/* Exit Statements */
process.on( 'exit', function( code ) {
	console.timeEnd( 'Execution time' );
});

/* Exports */

module.exports = {
	concatenate: function( sourceFiles ) { queueTask( concatenate, sourceFiles ); },
	minify: function() { queueTask( minify ); },
	compress: function() { queueTask( compress ) },
	write: function( outFile ) { queueTask( write, outFile ) }
}
